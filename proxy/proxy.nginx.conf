upstream backend {
    server $BACKEND_HOST;
    # least_conn; # load balancing
    #ip_hash; # sticky session
    # keepalive 100;
}

map $http_accept $accept_header {
    default $http_accept;
    ""      */*;
}

map $ssl_early_data $tls1_3_early_data {
  "~." $ssl_early_data;
  default "nope";
}

server {
  listen 80;
  server_name $HOST_NAME;

  return 301 https://$host$request_uri;
}

server {
    # quic and http/3
    listen 443 http3 reuseport;
    listen [::]:443 http3 reuseport;

    # http/2 and http/1.1
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name $HOST_NAME;

    # you need to mount these files when running this container
    ssl_certificate /etc/nginx/certs/certificate.crt;
    ssl_certificate_key /etc/nginx/certs/privatekey.key;

    # Enable all TLS versions (TLSv1.3 is required for QUIC).
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

    # 0-RTT QUIC connection resumption
    ssl_early_data on;

    # Add Alt-Svc header to negotiate HTTP/3.
    add_header alt-svc 'h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400';

    # Sent when QUIC was used
    add_header QUIC-Status $http3;
    add_header X-Early-Data $tls1_3_early_data;

    add_header Strict-Transport-Security "max-age=15768000; includeSubdomains;";
    add_header X-Content-Type-Options "nosniff" always;
    # http2_push_preload on;

    brotli_static on;
    brotli on;
    brotli_types text/plain text/css application/json application/javascript application/x-javascript text/javascript;
    brotli_comp_level 4;

    gzip on;
    gzip_http_version 1.1;
    gzip_static on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript;

    location / {
        proxy_http_version  1.1;
        proxy_pass                         http://backend;
        proxy_cache_bypass                 true;
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        "upgrade";
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  $server_port;
        proxy_set_header Accept $accept_header;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    location ~* ^.+\.(atom|bmp|bz2|doc|docx|eot|exe|gif|gz|ico|jpeg|jpg|mid|midi|mp4|ogg|ogv|otf|pdf|png|ppt|pptx|rar|rss|rtf|svg|svgz|swf|tar|tgz|ttf|txt|wav|woff|xls|zip)$ {
        access_log      off;
        log_not_found   off;
        expires         max;
        proxy_pass      http://backend;
    }

    # add max expire on webpack bundled assets  assets.hash.ext
    location ~* ^.+\..+\.(css|js|xml)$ {
        access_log      off;
        log_not_found   on;
        expires         max;
        proxy_pass      http://backend;
    }

    location ~* ^.+\.(html?|json)$ {
        expires         -1;
        proxy_pass      http://backend;
    }
}